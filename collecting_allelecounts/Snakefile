import glob, os

# Get config
configfile: "config.yaml"

# Set variables
indir = config["indir"]
outdir = config["outdir"]
rscript = config["process_script"]

# Get samples
samples = [os.path.basename(x) for x in glob.glob(indir + "*bam")]
samples = [x.replace(".dedup_q30.bam", "") for x in samples]

# Desired output
rule all:
	input:
		expand(outdir + "{sample}_allelecounts.tsv.gz", sample = samples)
        
# Count allelic reads using alleleCounter
# If per chromosome
if config["indiv_chrs"]:
    chromosomes = config["chromosomes"]
    rule alleleCounter:
        input:
            bam=indir + "{sample}.dedup_q30.bam",
            snp=config["snp_pos_prefix"] + "{chromosome}.txt"
        output:
            temp(outdir + "{sample}-{chromosome}_allelecounts.tsv")
        priority: 1
        shell:
            "alleleCounter -b {input.bam} -l {input.snp} "
            "-o {output} -f 0 --dense-snps"
            
    # Combine chromosomes
    rule concatenateCounts:
        input:
            expand(outdir + "{{sample}}-{chromosome}_allelecounts.tsv", chromosome = chromosomes)
        output:
            temp(outdir + "{sample}_allelecounts.tsv")
        priority: 2
        shell:
            "awk 'FNR==1 && NR!=1 {{ while (/^#CHR/) getline; }} 1 {{print}}' {input} > {output}"

else:
    rule alleleCounter:
        input:
            bam=indir + "{sample}.dedup_q30.bam",
            snp=config["snp_pos"]
        output:
            temp(outdir + "{sample}_allelecounts.tsv")
        shell:
            "alleleCounter -b {input.bam} -l {input.snp} "
            "-o {output} -f 0 --dense-snps"

# Process counts and remove 0-depth SNP locations
rule processCounts:
    input:
        outdir + "{sample}_allelecounts.tsv"
    output:
        outdir + "{sample}_allelecounts.tsv.gz"
    priority: 10
    shell:
        #rscript + " -i {input} -o {output}"
        "gzip {input}"

## Gzip output
#rule gzip:
    #input:
        #outdir + "{sample}_allelecounts.tsv"
    #output:
        #outdir + "{sample}_allelecounts.tsv.gz"
    #priority: 3
    #shell:
        #"gzip {input}"


## Process counts and remove 0 depth reads
#rule processCounts:
    #input:
        #outdir + "{sample}_allelecounts.tsv"
    #output:
        #outdir + "{sample}_baf.tsv"
    #priority: 2 # Prioritize to save disk space more quickly
    #shell:
        #rscript + " -i {input} -o {output}"